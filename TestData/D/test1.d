// Variable Declarations
int a;
int a1;
int _a;
int _a1;
const int a;
immutable int a;
inout shared immutable int a;
inout int a;
shared long a;
bool a;
int a, b;
int a, b, c;
int a, b = 3;
int a, b = 3, c;
int a, b = 3, c = 33;
const int a, b, c;
A* a;
int* a;
int *a;
int[] a;
int[12] a;
int[2..b] a;
int[bool] a;
const int[10] a;
int **a;
int ****a;
int*[] a;
int*[][] a;
int[]* a;
int[10][20] a;
int[10]*[5] a;
int[] a, b;
int* a, b;
int [2][20][2] a;
double [2][20][2] a;
short a = 1;
short a = void;
static int a = 1;
static a = 1; // Type can be inferred with a storage class and an initializer.
auto a = 123456;
auto a = 123456u;
auto a = 123456Ul;
auto a = 1e23;
auto a = 1.0;
auto a = 1.1e3;
auto a = 1.1e-3;
auto a = 1.1e+3;
auto a = 1.1E-9;
auto a = 1.1E+9;
auto a = .345E2f;
auto a = 0.345E2f;
auto a = 10f;
auto a = 10.;
auto a = 0XFp1F;
auto a = 0x1.FFFFFFFFFFFFFp1023;
auto a = 0x1p-52;
auto a = 1.175494351e-38F;
auto a = 6.3i;
auto a = 6.3fi;
auto a = 6.3Li;
auto a = "this is a long string";
auto a = 12, s = "string";
auto a = new A();
auto a = new A;
auto a = ["hi", "ho"];
auto a = [1,2,3];
auto a = [1u,2,3];
auto a = [21u:"he", 38:"ho", 2:"hi"];
int[] a = [1, 2];
static S s = {a:1, b:2}; // Static struct initialization
A a;
A[] a;
A[10] a;
long function(int) a;
long delegate(int) a;
long function(int x) a;
long function(int x)[] a;
long delegate(int x)[] a;
typeof(i) j;
typeof(this) a;
typeof(super) a;
typeof(return) a;
typeof(A.a) b;
typeof(a).b c;
typeof(return).a b;
immutable(int) a;
immutable(int[]) a;
immutable(int)[] a;
immutable(const int*) a;
ubyte[T.sizeof] storage(T) = 0;
auto array(alias a) = a;
private int a;
protected int a;
public int a;
private const int a;
private ref const int a;
private static string a = "a";
Foo!(int) a;
Foo!(int, double) a;
Foo!(int, A) a;
Foo!(int).t a;
Foo!int.t a;
Foo!(A) a;
Foo!(A, B) a;
Foo!A a;
{
  int* a;
  A* a;
  A[] a;
  A[10] a;
}
